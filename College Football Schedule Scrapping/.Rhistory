# CFB Schedule Scrapping
# pulls school wins, losses, and conference data to use in the ELO Model
# HUGE THANKS TO https://www.sports-reference.com/ for providing the data
# data and variable loading  ----
source('~/CFB Parent Variables.R')
# pull cfb schedules  ----
schools_url <- 'https://www.sports-reference.com/cfb/schools/'
schools <- read_html(schools_url)
change_school_names(schools_list, school, school)
schools_list <- schools %>%
html_table(fill = TRUE) %>%
as.data.frame() %>%
select(2, 3, 4) %>%
filter(Var.2 != '',
Var.2 != 'School') %>%
mutate(Var.3 = as.numeric(Var.3),
Var.4 = as.numeric(Var.4)) %>%
group_by(Var.2) %>%
complete(Var.3 = seq(min(Var.3), max(Var.4))) %>%
rename(school = 1,
seasons = 2) %>%
select(-Var.4) %>%
mutate(school = case_when(school == 'UTEP' ~ 'Texas-El Paso',
school == 'UAB' ~ 'Alabama-Birmingham',
school == 'BYU' ~ "brigham-young",
school == 'UCF' ~ "Central Florida",
school == "LSU" ~ "Louisiana State",
school == "Ole Miss" ~ "Mississippi",
school == "Pitt" ~ "Pittsburgh",
school == "USC" ~ 'Southern California',
school == 'SMU' ~ "Southern Methodist",
school == 'UTSA' ~ 'Texas-San Antonio',
school == 'Louisiana' ~ 'louisiana-lafayette',
school == 'Bowling Green' ~ 'Bowling Green State',
school == 'The Citadel' ~ 'Citadel',
TRUE ~ school)) %>%
filter(school != '') %>%
mutate(school = tolower(school),
school = gsub(' ', '-', school),
school = gsub("'", '', school),
school = gsub('\\-&-', '-', school),
school = gsub('\\&', '', school),
school = gsub('[()]', '', school)) %>%
rename(school_code = school) %>%
mutate(school_url = paste('https://www.sports-reference.com/cfb/schools/',school_code,'/',seasons,'-schedule.html', sep = '')) %>%
filter(school_code == 'nebraska')
# pull schedules for each school  ----
school_seasons_schedule_list <- list()
for(i in schools_list$school_url){
print(i)
tag_used <- schools_list %>%
filter(school_url == i)
tryCatch({
download.file(i, destfile = "scrapedpage.html", quiet=TRUE)
schedules <- read_html(i)
schedules_list <- schedules %>% html_table(fill = TRUE)
if(length(schedules_list) == 1){
cfb_item <- as.data.frame(schedules_list[1]) %>% mutate(tag = tag_used$school_code)
}else if(length(schedules_list) == 2){
cfb_item <- as.data.frame(schedules_list[2]) %>% mutate(tag = tag_used$school_code)
}
#print(i)
print(cfb_item)
school_seasons_schedule_list[[i]] <- cfb_item
}, error=function(e){})
}
warnings()
# pull schedules for each school  ----
school_seasons_schedule_list <- list()
for(i in schools_list$school_url){
print(i)
tag_used <- schools_list %>%
filter(school_url == i)
tryCatch({
download.file(i, destfile = "scrapedpage.html", quiet=TRUE)
schedules <- read_html(i)
schedules_list <- schedules %>% html_table(fill = TRUE)
if(length(schedules_list) == 1){
cfb_item <- as.data.frame(schedules_list[1]) %>% mutate(tag = tag_used$school_code)
}else if(length(schedules_list) == 2){
cfb_item <- as.data.frame(schedules_list[2]) %>% mutate(tag = tag_used$school_code)
}
#print(i)
print(cfb_item)
school_seasons_schedule_list[[i]] <- cfb_item
}, error=function(e){})
}
# CFB Schedule Scrapping
# pulls school wins, losses, and conference data to use in the ELO Model
# HUGE THANKS TO https://www.sports-reference.com/ for providing the data
# data and variable loading  ----
source('~/CFB Parent Variables.R')
# pull cfb schedules  ----
schools_url <- 'https://www.sports-reference.com/cfb/schools/'
schools <- read_html(schools_url)
change_school_names(schools_list, school, school)
schools_list <- schools %>%
html_table(fill = TRUE) %>%
as.data.frame() %>%
select(2, 3, 4) %>%
filter(Var.2 != '',
Var.2 != 'School') %>%
mutate(Var.3 = as.numeric(Var.3),
Var.4 = as.numeric(Var.4)) %>%
group_by(Var.2) %>%
complete(Var.3 = seq(min(Var.3), max(Var.4))) %>%
rename(school = 1,
seasons = 2) %>%
select(-Var.4) %>%
mutate(school = case_when(school == 'UTEP' ~ 'Texas-El Paso',
school == 'UAB' ~ 'Alabama-Birmingham',
school == 'BYU' ~ "brigham-young",
school == 'UCF' ~ "Central Florida",
school == "LSU" ~ "Louisiana State",
school == "Ole Miss" ~ "Mississippi",
school == "Pitt" ~ "Pittsburgh",
school == "USC" ~ 'Southern California',
school == 'SMU' ~ "Southern Methodist",
school == 'UTSA' ~ 'Texas-San Antonio',
school == 'Louisiana' ~ 'louisiana-lafayette',
school == 'Bowling Green' ~ 'Bowling Green State',
school == 'The Citadel' ~ 'Citadel',
TRUE ~ school)) %>%
filter(school != '') %>%
mutate(school = tolower(school),
school = gsub(' ', '-', school),
school = gsub("'", '', school),
school = gsub('\\-&-', '-', school),
school = gsub('\\&', '', school),
school = gsub('[()]', '', school)) %>%
rename(school_code = school) %>%
mutate(school_url = paste('https://www.sports-reference.com/cfb/schools/',school_code,'/',seasons,'-schedule.html', sep = ''))
# pull schedules for each school  ----
school_seasons_schedule_list <- list()
for(i in schools_list$school_url){
tag_used <- schools_list %>%
filter(school_url == i)
tryCatch({
schedules <- read_html(i)
schedules_list <- schedules %>% html_table(fill = TRUE)
if(length(schedules_list) == 1){
cfb_item <- as.data.frame(schedules_list[1]) %>% mutate(tag = tag_used$school_code)
}else if(length(schedules_list) == 2){
cfb_item <- as.data.frame(schedules_list[2]) %>% mutate(tag = tag_used$school_code)
}
print(i)
print(cfb_item)
school_seasons_schedule_list[[i]] <- cfb_item
}, error=function(e){})
}
school_seasons_schedule_list
# CFB Schedule Scrapping
# pulls school wins, losses, and conference data to use in the ELO Model
# HUGE THANKS TO https://www.sports-reference.com/ for providing the data
# data and variable loading  ----
source('~/CFB Parent Variables.R')
# pull cfb schedules  ----
schools_url <- 'https://www.sports-reference.com/cfb/schools/'
schools <- read_html(schools_url)
change_school_names(schools_list, school, school)
schools_list <- schools %>%
html_table(fill = TRUE) %>%
as.data.frame() %>%
select(2, 3, 4) %>%
filter(Var.2 != '',
Var.2 != 'School') %>%
mutate(Var.3 = as.numeric(Var.3),
Var.4 = as.numeric(Var.4)) %>%
group_by(Var.2) %>%
complete(Var.3 = seq(min(Var.3), max(Var.4))) %>%
rename(school = 1,
seasons = 2) %>%
select(-Var.4) %>%
mutate(school = case_when(school == 'UTEP' ~ 'Texas-El Paso',
school == 'UAB' ~ 'Alabama-Birmingham',
school == 'BYU' ~ "brigham-young",
school == 'UCF' ~ "Central Florida",
school == "LSU" ~ "Louisiana State",
school == "Ole Miss" ~ "Mississippi",
school == "Pitt" ~ "Pittsburgh",
school == "USC" ~ 'Southern California',
school == 'SMU' ~ "Southern Methodist",
school == 'UTSA' ~ 'Texas-San Antonio',
school == 'Louisiana' ~ 'louisiana-lafayette',
school == 'Bowling Green' ~ 'Bowling Green State',
school == 'The Citadel' ~ 'Citadel',
TRUE ~ school)) %>%
filter(school != '') %>%
mutate(school = tolower(school),
school = gsub(' ', '-', school),
school = gsub("'", '', school),
school = gsub('\\-&-', '-', school),
school = gsub('\\&', '', school),
school = gsub('[()]', '', school)) %>%
rename(school_code = school) %>%
mutate(school_url = paste('https://www.sports-reference.com/cfb/schools/',school_code,'/',seasons,'-schedule.html', sep = ''))
# pull schedules for each school  ----
school_seasons_schedule_list <- list()
for(i in schools_list$school_url){
tag_used <- schools_list %>%
filter(school_url == i)
tryCatch({
schedules <- read_html(i)
schedules_list <- schedules %>% html_table(fill = TRUE)
if(length(schedules_list) == 1){
cfb_item <- as.data.frame(schedules_list[1]) %>% mutate(tag = tag_used$school_code)
}else if(length(schedules_list) == 2){
cfb_item <- as.data.frame(schedules_list[2]) %>% mutate(tag = tag_used$school_code)
}
print(i)
print(cfb_item)
school_seasons_schedule_list[[i]] <- cfb_item
}, error=function(e){})
}
school_seasons_schedule_list
# CFB Schedule Scrapping
# pulls school wins, losses, and conference data to use in the ELO Model
# HUGE THANKS TO https://www.sports-reference.com/ for providing the data
# data and variable loading  ----
source('~/CFB Parent Variables.R')
schools_url <- 'https://www.sports-reference.com/cfb/schools/'
schools <- read_html(schools_url)
change_school_names(schools_list, school, school)
schools_url <- 'https://www.sports-reference.com/cfb/schools/'
schools <- read_html(schools_url)
schools_list <- schools %>%
html_table(fill = TRUE) %>%
as.data.frame() %>%
select(2, 3, 4) %>%
filter(Var.2 != '',
Var.2 != 'School') %>%
mutate(Var.3 = as.numeric(Var.3),
Var.4 = as.numeric(Var.4)) %>%
group_by(Var.2) %>%
complete(Var.3 = seq(min(Var.3), max(Var.4))) %>%
rename(school = 1,
seasons = 2) %>%
select(-Var.4) %>%
mutate(school = case_when(school == 'UTEP' ~ 'Texas-El Paso',
school == 'UAB' ~ 'Alabama-Birmingham',
school == 'BYU' ~ "brigham-young",
school == 'UCF' ~ "Central Florida",
school == "LSU" ~ "Louisiana State",
school == "Ole Miss" ~ "Mississippi",
school == "Pitt" ~ "Pittsburgh",
school == "USC" ~ 'Southern California',
school == 'SMU' ~ "Southern Methodist",
school == 'UTSA' ~ 'Texas-San Antonio',
school == 'Louisiana' ~ 'louisiana-lafayette',
school == 'Bowling Green' ~ 'Bowling Green State',
school == 'The Citadel' ~ 'Citadel',
TRUE ~ school)) %>%
filter(school != '') %>%
mutate(school = tolower(school),
school = gsub(' ', '-', school),
school = gsub("'", '', school),
school = gsub('\\-&-', '-', school),
school = gsub('\\&', '', school),
school = gsub('[()]', '', school)) %>%
rename(school_code = school) %>%
mutate(school_url = paste('https://www.sports-reference.com/cfb/schools/',school_code,'/',seasons,'-schedule.html', sep = ''))
# pull schedules for each school  ----
school_seasons_schedule_list <- list()
for(i in schools_list$school_url){
tag_used <- schools_list %>%
filter(school_url == i)
tryCatch({
schedules <- read_html(i)
schedules_list <- schedules %>% html_table(fill = TRUE)
if(length(schedules_list) == 1){
cfb_item <- as.data.frame(schedules_list[1]) %>% mutate(tag = tag_used$school_code)
}else if(length(schedules_list) == 2){
cfb_item <- as.data.frame(schedules_list[2]) %>% mutate(tag = tag_used$school_code)
}
print(i)
print(cfb_item)
school_seasons_schedule_list[[i]] <- cfb_item
}, error=function(e){})
}
warnings()
