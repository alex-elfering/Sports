rows = `Wins 6` < 1
)
) %>%
tab_style(
style = list(
cell_text(color = "gray75")
),
locations = cells_body(
columns = `Finishes Out`,
rows = `Finishes Out` < 1
)
)
# prediction table outputs for college football model
library(gt)
options(scipen = 999)
# percent symbols to use for the prediction tables  ----
less_1 <- function(.x) {
"<1%"
}
greater_99 <- function(.x) {
">99%"
}
no_percent <- function(.x) {
"-"
}
percent_100 <- function(.x) {
"\u2713"
}
nor_percent <- function(.x) {
glue::glue("{.x}%")
}
wins_6_fill_scale <- c('white', '#fee8c8', '#fdbb84', '#e34a33')
wins_out_fill_scale <- c('white', '#ece7f2', '#a6bddb', '#2b8cbe')
# loading the data  ----
max_iter_wk <- max(weekly_forecast$wk)
#max_iter_wk <- 1
# preparing the data for the table  ----
latest_forecast <- weekly_forecast %>%
mutate(bowl_times = round((bowl_times/n_times)*100,3),
win_out_times = round((win_out_times/n_times)*100,3),
runs_table = round((runs_table/n_times)*100,3)) %>%
group_by(school) %>%
arrange(wk) %>%
mutate(change_bowl = bowl_times-lag(bowl_times)) %>%
ungroup() %>%
filter(wk == max_iter_wk) %>%
arrange(desc(bowl_times),
desc(runs_table)) %>%
unite(current_record, c('c_wins', 'c_lose'), sep = '-') %>%
unite(predicted_record, c('avg_wins', 'avg_loses'), sep = '-') %>%
select(conf,
school,
current_record,
predicted_record,
bowl_times,
change_bowl,
runs_table)
range_games_won %>%
select(-conf,
-div,
-freq) %>%
filter(wk == max_iter_wk) %>%
mutate(freq_p = round((freq_p)*100,3)) %>%
group_by(school,
wk) %>%
complete(total_wins = seq(0, 12, 1)) %>%
replace(is.na(.), 0) %>%
pivot_wider(names_from = total_wins, values_from = freq_p) %>%
ungroup()
# the table for each conference
conf_var <- 'MWC'
filter_conf_table <- latest_forecast %>%
filter(conf == conf_var) %>%
select(-conf,
-change_bowl) %>%
rename(School = school,
`Record` = current_record,
`Predicted Record` = predicted_record,
`Wins 6` = bowl_times,
`Finishes Out` = runs_table)
max_6_wins <- max(filter_conf_table$`Wins 6`)
max_finishes_out <- max(filter_conf_table$`Finishes Out`)
filter_conf_table %>%
gt() %>%
#
tab_options(
column_labels.border.top.style = "none",
table.border.top.style = "none",
column_labels.border.bottom.style = "none",
column_labels.border.bottom.width = 1,
column_labels.border.bottom.color = "#334422",
table_body.border.top.style = "none",
table_body.border.bottom.color = "#0000001A",
data_row.padding = px(7)
) %>%
tab_style(
style = cell_text(
size = px(12),
weight = "bold",
transform = "uppercase"
),
locations = cells_column_labels(everything())
) %>%
tab_options(table.font.names = "IBM Plex Sans",
table.font.size = 12) %>%
fmt("Wins 6",
rows = `Wins 6` < 1,
fns = less_1) %>%
fmt("Wins 6",
rows = `Wins 6` == 0,
fns = no_percent) %>%
fmt("Wins 6",
rows = `Wins 6` > 99,
fns = greater_99) %>%
fmt("Wins 6",
rows = `Wins 6` < 99 & `Wins 6` >= 1,
fns = nor_percent)  %>%
fmt("Finishes Out",
rows = `Finishes Out` < 1,
fns = less_1) %>%
fmt("Finishes Out",
rows = `Finishes Out` == 0,
fns = no_percent) %>%
fmt("Finishes Out",
rows = `Finishes Out` > 99,
fns = greater_99) %>%
fmt("Finishes Out",
rows = `Finishes Out` < 99 & `Finishes Out` >= 1,
fns = nor_percent) %>%
data_color(
columns = `Wins 6`,
colors = scales::col_numeric(
palette = wins_6_fill_scale,
domain = c(0, max_6_wins)
)
) %>%
data_color(
columns = `Finishes Out`,
colors = scales::col_numeric(
palette = wins_out_fill_scale,
domain = c(0, max_finishes_out)
)
) %>%
tab_style(
style = list(
cell_text(color = "gray75")
),
locations = cells_body(
columns = `Wins 6`,
rows = `Wins 6` < 1
)
) %>%
tab_style(
style = list(
cell_text(color = "gray75")
),
locations = cells_body(
columns = `Finishes Out`,
rows = `Finishes Out` < 1
)
)
# creating a table to rank college football teams that have either improved or done worse since the beginning of the season
# which teams have gained or lost more than 5% of their pre-season ELO?
library(gt)
library(htmltools)
library(glue)
library(tidyverse)
options(scipen = 999)
setwd('~/GitHub/Sports/College Football ELO Ranking Tables')
# load the elo model and schedule data
full_elo_df <- read.csv('~/GitHub/Sports/College Football ELO Model/Data/FullELODF.csv') %>% select(-1)
conferences <- read.csv('~/GitHub/Sports/College Football Schedule Scrapping/Data/Conferences.csv') %>% select(-1)
fbs_schedule <- read.csv('~/GitHub/Sports/College Football Schedule Scrapping/Data/FBS Full Schedule.csv') %>% select(-1)
season_var <- 2022
# what is the latest week in the season selected?
season_wk <- full_elo_df %>%
filter(season == season_var) %>%
filter(wk == max(wk)) %>%
select(wk) %>%
slice(1) %>%
as.numeric()
season_label <- season_wk-1
# variables for the gt table
up_arrow <- "<span style=\"color:#4292c6\">&#9650;</span>"
down_arrow <- "<span style=\"color:#ef6548\">&#9660;</span>"
no_arrow <- "<span style=\"color:#fed976\">&#9644;</span>"
plus_symbol <- function(.x) {
glue::glue("+{.x}")
}
less_than_100 <- function(.x) {
glue::glue("+{.x}%")
}
plus_percent <- function(.x) {
glue::glue("+{.x}%")
}
percent_symbol <- function(.x) {
glue::glue("{.x}%")
}
# what games have been played for each team and who is next?
latest_results <- fbs_schedule %>%
filter(wk == season_wk,
season == season_var) %>%
select(wk,
school,
pts,
opp,
opponent,
location) %>%
filter(!is.na(pts)) %>%
mutate(result = ifelse(pts > opp, 'W', 'L'),
result_label = paste(result, ' ', location, ' ', opponent, ' ', pts, '-', opp, sep = '')) %>%
select(school,
result_label)
next_match <- fbs_schedule %>%
filter(wk == season_wk + 1,
season == season_var) %>%
select(wk,
school,
pts,
opp,
opponent,
location) %>%
mutate(next_label = paste(location, opponent, sep = ' ')) %>%
select(school,
next_label)
# calculate rankings by week for the season
pre_ratings <- full_elo_df %>%
inner_join(conferences,
by = c('season' = 'season',
'team_a' = 'school')) %>%
filter(season == season_var) %>%
group_by(team_a) %>%
filter(wk == min(wk)) %>%
ungroup() %>%
mutate(pre_elo = case_when(pts > opp ~ elo_a-elo_adj,
pts < opp ~ elo_a+elo_adj)) %>%
mutate(wk = 0) %>%
select(season,
wk,
team_a,
elo_a = pre_elo) %>%
mutate(rank = dense_rank(desc(elo_a)),
wins = 0,
loses = 0)
pre_school <- pre_ratings %>%
select(team_a,
pre_rating = elo_a,
pre_rank = rank)
season_wk_ranks <- full_elo_df %>%
filter(season == season_var) %>%
inner_join(conferences,
by = c('season' = 'season',
'team_a' = 'school')) %>%
select(season,
wk,
team_a,
elo_a,
elo_adj) %>%
arrange(team_a,
wk) %>%
group_by(team_a) %>%
complete(wk = seq.int(1, season_wk, 1)) %>%
bind_rows(pre_ratings) %>%
arrange(wk) %>%
fill(season) %>%
fill(elo_a) %>%
mutate(wins = ifelse(elo_a > lag(elo_a) & wk != 0, 1, 0),
loses = ifelse(elo_a < lag(elo_a) & wk != 0,1, 0),
elo_adj = elo_a - lag(elo_a)) %>%
fill(loses, .direction = 'up') %>%
fill(wins, .direction = 'up') %>%
mutate(roll_wins = cumsum(wins),
roll_loses = cumsum(loses)) %>%
ungroup() %>%
group_by(wk) %>%
mutate(rank = dense_rank(desc(elo_a))) %>%
ungroup() %>%
group_by(team_a) %>%
mutate(prev_rank = lag(rank),
jump = (rank-lag(rank) ),
jump = ifelse(jump < 0, jump*-1, jump*-1)) %>%
ungroup() %>%
inner_join(conferences,
by = c('season' = 'season',
'team_a' = 'school')) %>%
arrange(wk,
rank) %>%
unite(conf, c('conf', 'div'), sep = ' ', na.rm = TRUE) %>%
unite(record, c('roll_wins', 'roll_loses'), sep = '-') %>%
left_join(latest_results,
by = c('team_a' = 'school')) %>%
left_join(next_match,
by = c('team_a' = 'school')) %>%
mutate(result_label = ifelse(is.na(result_label), 'Did not play', result_label),
next_label = ifelse(is.na(next_label), 'Does not play', next_label)) %>%
select(wk,
team_a,
conf,
rank,
jump,
record,
elo_a,
elo_adj,
result_label,
next_label)
# which teams have either gained or lost 5% of their pre-season ELO ratings?
team_improvement <- season_wk_ranks %>%
filter(wk == season_wk) %>%
inner_join(pre_school) %>%
mutate(improvement = (elo_a-pre_rating)/pre_rating,
rank_change = pre_rank-rank) %>%
arrange(desc(improvement)) %>%
select(team_a,
record,
conf,
improvement,
current_elo = elo_a,
pre_elo = pre_rating,
rank,
rank_change,
result_label,
next_label) %>%
mutate(current_elo = round(current_elo, 1),
pre_elo = round(pre_elo, 1),
improvement = round(improvement, 3)*100) %>%
filter(improvement >= 5 | improvement <= -5,
dense_rank(desc(improvement)) <=10 | dense_rank((improvement)) <=10) %>%
rename(School = team_a,
Record = record,
`Conference & Div` = conf,
`Percent Change` = improvement,
`Current ELO` = current_elo,
`Pre-Season ELO` = pre_elo,
Rank = rank,
`Jump from Week #1` = rank_change,
`Game Result` = result_label,
`Next Match` = next_label)
# the final table
team_improvement %>%
gt() %>%
tab_header(
title = md("**Which College Football Teams Improved or Got Worse Since Week #1?**"),
subtitle = glue("Top & bottom 10 teams based on ELO Percent Change from Week #1 | {season_var} Season as of Week #{season_label}")
) %>%
tab_source_note(
source_note = glue('ELO ratings score each team based on factors such as home-field advantage, margin of victory, and quality of opponent. At the end of each season, school ratings regress partially to the value of their respective conference. Teams new to FBS begin with an ELO rating of 1500.')
) %>%
tab_source_note(
source_note = "Code by Alex Elfering | Source: College Football Reference | Model Inspired by FiveThirtyEight"
) %>%
tab_style(
style = cell_text(
color = "gray75"
),
locations = cells_body(vars(`Conference & Div`))
) %>%
tab_style(
style = cell_text(
color = "gray75"
),
locations = cells_body(
columns = c(`Game Result`),
rows = `Game Result` == 'Did not play')
) %>%
tab_style(
style = cell_text(
color = "gray75"
),
locations = cells_body(
columns = c(`Next Match`),
rows = `Next Match` == 'Does not play')
) %>%
tab_style(
style = cell_text(
weight = "bold"
),
locations = cells_body(vars(`School`, `Percent Change`))
) %>%
tab_options(
column_labels.border.top.style = "none",
table.border.top.style = "none",
column_labels.border.bottom.style = "none",
column_labels.border.bottom.width = 1,
column_labels.border.bottom.color = "#334422",
table_body.border.top.style = "none",
table_body.border.bottom.color = "#0000001A",
data_row.padding = px(7)
) %>%
tab_style(
style = cell_text(
size = px(12),
weight = "bold",
transform = "uppercase"
),
locations = cells_column_labels(everything())
) %>%
fmt("Percent Change",
rows = `Percent Change` > 0,
fns = plus_percent) %>%
fmt("Percent Change",
rows = `Percent Change` < 0,
fns = percent_symbol) %>%
fmt("Jump from Week #1",
rows = `Jump from Week #1` > 0,
fns = plus_symbol) %>%
tab_options(table.font.names = "IBM Plex Sans",
table.font.size = 12) %>%
cols_align(
align = c("left"),
columns = c(`Jump from Week #1`, `Pre-Season ELO`)
) %>%
text_transform(
locations = cells_body(
columns = `Jump from Week #1`,
rows = `Jump from Week #1` > 0),
fn = function(x) paste(x, up_arrow)
) %>%
text_transform(
locations = cells_body(
columns = `Jump from Week #1`,
rows = `Jump from Week #1` < 0),
fn = function(x) paste(x, down_arrow)
) %>%
text_transform(
locations = cells_body(
columns = `Jump from Week #1`,
rows = `Jump from Week #1` == 0),
fn = function(x) paste(x, no_arrow)
) %>%
tab_style(
style = list(
cell_fill(color = "#F9E3D6")
),
locations = cells_body(
columns = `Percent Change`,
rows = `Percent Change` < 0
)
) %>%
tab_style(
style = list(
cell_fill(color = "#c6dbef")
),
locations = cells_body(
columns = `Percent Change`,
rows = `Percent Change` > 0
)
) %>%
gtsave("Improved or Worse Teams.png")
library(data.table)
library(tidyverse)
library(ggplot2)
library(rvest)
library(stringi)
library(glue)
options(scipen = 999)
SchoolsURL <- 'https://www.sports-reference.com/cbb/play-index/matchup_finder.cgi?request=1&year_min=1950&year_max=2022&school_id=&opp_id=&game_type=A&game_month=&game_location=H&game_result=&is_overtime=&comp_school=le&comp_opp=le&rank_school=ANY&rank_opp=ANY&order_by=date_game&order_by_asc=&offset=100'
Schools <- read_html(SchoolsURL)
SchoolsList <- Schools %>% html_table(fill = TRUE)
x <- -100
GamesList <- list()
repeat {
x = x+100
SchoolsURL <- glue('https://www.sports-reference.com/cbb/play-index/matchup_finder.cgi?request=1&year_min=1950&year_max=2022&school_id=&opp_id=&game_type=A&game_month=&game_location=H&game_result=&is_overtime=&comp_school=le&comp_opp=le&rank_school=ANY&rank_opp=ANY&order_by=date_game&order_by_asc=&offset={x}')
Schools <- read_html(SchoolsURL)
SchoolsList <- Schools %>%
html_table(fill = TRUE) %>%
as.data.frame()
if(x == 0){
a <- x + 1
}else{
a <- x
}
GamesList[[a]] <- SchoolsList
if (nrow(SchoolsList) > 0 ){
print(x)
}
if (nrow(SchoolsList) == 0 ){
break
}
}
library(data.table)
library(tidyverse)
library(ggplot2)
library(rvest)
library(stringi)
library(glue)
options(scipen = 999)
SchoolsURL <- 'https://www.sports-reference.com/cbb/play-index/matchup_finder.cgi?request=1&year_min=1950&year_max=2022&school_id=&opp_id=&game_type=A&game_month=&game_location=H&game_result=&is_overtime=&comp_school=le&comp_opp=le&rank_school=ANY&rank_opp=ANY&order_by=date_game&order_by_asc=&offset=100'
Schools <- read_html(SchoolsURL)
SchoolsList <- Schools %>% html_table(fill = TRUE)
x <- -100
GamesList <- list()
repeat {
x = x+100
SchoolsURL <- glue('https://www.sports-reference.com/cbb/play-index/matchup_finder.cgi?request=1&year_min=1950&year_max=2022&school_id=&opp_id=&game_type=A&game_month=&game_location=H&game_result=&is_overtime=&comp_school=le&comp_opp=le&rank_school=ANY&rank_opp=ANY&order_by=date_game&order_by_asc=&offset={x}')
Schools <- read_html(SchoolsURL)
SchoolsList <- Schools %>%
html_table(fill = TRUE) %>%
as.data.frame()
if(x == 0){
a <- x + 1
}else{
a <- x
}
GamesList[[a]] <- SchoolsList
if (nrow(SchoolsList) > 0 ){
print(x)
}
if (nrow(SchoolsList) == 0 ){
break
}
}
